@using TaskSurvey.ViewModel
@{
    Layout = "_Admin"; // Ensure it's using the Admin layout
}
@model SurveyViewModel

<div class="container">
    <h2>Survey</h2>

    @for (var i = 0; i < Model.Questions.Count; i++)
    {
        <div class="card mb-3">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="card-title">@Model.Questions[i].QuestionText</h5>

                    <!-- Delete Icons -->
                    <div>
                        
                        <a href="@Url.Action("Delete", "Admin", new { id = Model.Questions[i].QuestionId})" class="btn btn-sm btn-danger"
                           onclick="return confirm('Are you sure you want to delete this question?');">
                            <i class="fa fa-trash"></i> Delete
                        </a>
                    </div>
                </div>

                <!-- Hidden fields for QuestionId, QuestionType, and IsRequired -->
                <input type="hidden" asp-for="Questions[i].QuestionId" />
                <input type="hidden" asp-for="Questions[i].QuestionType" />
                <input type="hidden" asp-for="Questions[i].IsRequired" />

                @switch (Model.Questions[i].QuestionType)
                {
                    case "SingleChoice":
                        @foreach (var option in Model.Questions[i].Options)
                        {
                            <label class="form-check-label">@option.OptionText</label>

                            <br />
                        }
                        break;

                    case "Text":
                    <br />
                        <textarea class="form-control" asp-for="Questions[i].Answer" required="@Model.Questions[i].IsRequired" disabled></textarea>
                        break;
                }
            </div>
        </div>
    }

    <!-- Validation Errors Display -->
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@modelError.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    <!-- Add Question Button -->
    <a asp-action="AddQuestion" asp-controller="Admin" class="btn btn-primary">Add Question</a>
</div>