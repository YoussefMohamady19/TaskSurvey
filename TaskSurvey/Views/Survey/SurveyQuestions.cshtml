@using TaskSurvey.ViewModel
@{
    Layout = "_LoginPartial";
}

@model SurveyViewModel

<div class="container">
    <h2>Survey</h2>
    <form asp-action="Submit" method="post">
        @for (var i = 0; i < Model.Questions.Count; i++)
        {
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">@Model.Questions[i].QuestionText</h5>
                    
                    <input type="hidden" asp-for="Questions[i].QuestionId" />
                    <input type="hidden" asp-for="Questions[i].QuestionType" />
                    <input type="hidden" asp-for="Questions[i].IsRequired" />

                    @if (Model.Questions[i].IsRequired)
                    {
                        <span class="text-danger">*</span>
                    }

                    @switch (Model.Questions[i].QuestionType)
                    {
                        case "SingleChoice":
                            @foreach (var option in Model.Questions[i].Options)
                            {
                                <div class="form-check">
                                    <input type="radio"
                                           class="form-check-input"
                                           asp-for="Questions[i].Answer"
                                           value="@option.OptionText"
                                           required="@Model.Questions[i].IsRequired" />
                                    <label class="form-check-label">@option.OptionText</label>
                                </div>
                            }
                            break;

                        

                        case "Text":
                            <textarea class="form-control"
                                      asp-for="Questions[i].Answer"
                                      required="@Model.Questions[i].IsRequired"></textarea>
                            break;
                    }
                </div>
            </div>
        }

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <ul>
                    @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@modelError.ErrorMessage</li>
                    }
                </ul>
            </div>
        }

        <button type="submit" class="btn btn-primary">Submit Survey</button>
        <br />
    </form>
</div>
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@modelError.ErrorMessage</li>
            }
        </ul>
    </div>
    
}